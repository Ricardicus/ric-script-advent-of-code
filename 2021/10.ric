load("general.ric")

lines = getLines("inputs/10.txt")

points = {
   ')' : 3,
   ']' : 57,
   '}' : 1197,
   '>' : 25137
}

closer = {
   '{' : '}', 
   '(' : ')',
   '[' : ']',
   '<' : '>'
}

syntaxErrorScore = 0

incompleLines = []

. ( lines ... line ) {
   open = []
   close = []
   
   i = 0
   . [ i < len(line) ] {
      c = line[i]
      ? [ c == '}' ] {
         f = open.popFirst()
         ? [ f != '{' ] {
            #print("Expected '" + closer[f] + "', got: '" + c + "'")
            i = len(line)
            syntaxErrorScore += points[c]
         }
      } ~[ c == '>' ] {
         f = open.popFirst()
         ? [ f != '<' ] {
            #print("Expected '" + closer[f] + "', got: '" + c + "'")
            i = len(line)
            syntaxErrorScore += points[c]
         }
      } ~[ c == ']' ] {
         f = open.popFirst()
         ? [ f != '[' ] {
            #print("Expected '" + closer[f] + "' got: '" + c + "'")
            i = len(line)
            syntaxErrorScore += points[c]
         }
      } ~[ c == ')' ] {
         f = open.popFirst()
         ? [ f != '(' ] {
            #print("Expected '" + closer[f] + "' got: '" + c + "'")
            i = len(line)
            syntaxErrorScore += points[c]
         }
      } ~ {
         ? [ len(c) > 0 ] {
            open.push(c)
         }
      }
      i += 1

      ? [ i == len(line) ] {
         incompleLines.append(open)
      }
      @
   }
}

print("Part 1: " + syntaxErrorScore)

points = {
   ')' : 1,
   ']' : 2,
   '}' : 3,
   '>' : 4
}

scores = []
completions = []
. ( incompleLines ... open ) {
   completeSum = bigInt(0)
   completion = ""
   . ( open ... c ) {
      completion += closer[c]
      completeSum *= 5
      completeSum += points[closer[c]]
   }
   completions.append(completion)
   scores.append(completeSum)
}

scores = scores.sort()
print("Part 2: " + scores[scores.len()/2])
